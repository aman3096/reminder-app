{"remainingRequest":"/Users/amantandon/Desktop/WebDevelopment/reminder/myReminder/pwa/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/amantandon/Desktop/WebDevelopment/reminder/myReminder/pwa/src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css","dependencies":[{"path":"/Users/amantandon/Desktop/WebDevelopment/reminder/myReminder/pwa/src/App.vue","mtime":1623013394677},{"path":"/Users/amantandon/Desktop/WebDevelopment/reminder/myReminder/pwa/node_modules/css-loader/dist/cjs.js","mtime":1614323855029},{"path":"/Users/amantandon/Desktop/WebDevelopment/reminder/myReminder/pwa/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1622828979731},{"path":"/Users/amantandon/Desktop/WebDevelopment/reminder/myReminder/pwa/node_modules/postcss-loader/src/index.js","mtime":1614323822653},{"path":"/Users/amantandon/Desktop/WebDevelopment/reminder/myReminder/pwa/node_modules/cache-loader/dist/cjs.js","mtime":1622828955401},{"path":"/Users/amantandon/Desktop/WebDevelopment/reminder/myReminder/pwa/node_modules/vue-loader-v16/dist/index.js","mtime":1622828979731}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNpZHsKICB3aWR0aDogMTAwJTsKfQo="},{"version":3,"sources":["/Users/amantandon/Desktop/WebDevelopment/reminder/myReminder/pwa/src/App.vue"],"names":[],"mappings":";AAmGA,CAAC,CAAC,CAAC;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACb","file":"/Users/amantandon/Desktop/WebDevelopment/reminder/myReminder/pwa/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n  <div id=\"app\">\n    <h4 class=\"col-12 bg-primary text-white text-center p-2\">{{name}}'s To Do List</h4>\n    <div class=\"container-fluid p-4\">\n      <div class=\"row\" v-if=\"filteredTasks.length == 0\">\n        <div class=\"col text-center\">\n          <b>Nothing to do. Enjoy!</b>\n        </div>\n      </div>\n      <template v-else>\n        <div class=\"row col-12\">\n          <div class=\"col-4 font-weight-bold\">Task</div>\n          <div class=\"col-4 font-weight-bold\">When</div>\n          <div class=\"col-4 font-weight-bold\">Done</div>\n        </div>\n        <div class=\"row col-12\" v-for=\"t in filteredTasks\" v-bind:key=\"t.action\">\n          <div class=\"col-4\">{{t.action}}</div>\n          <div class=\"col-4\">{{t.when}}</div>\n          <div class=\"col-2 text-center\">\n            <input type=\"checkbox\" v-model=\"t.done\" class=\"form-check-input\">\n          </div>\n        </div>\n      </template>\n      <div class=\"row col-12 py-2\">\n        <div class=\"col-6\">\n          <input v-model=\"newItemText\" class=\"form-control\" placeholder=\"Enter a reminder\">\n        </div>\n        <div class=\"col-3\">\n          <input v-model=\"whenItemText\" class=\"form-control\" placeholder=\"When\">\n        </div>\n        <div class=\"col-3\">\n          <button class=\"btn btn-primary\" v-on:click=\"addNewTodo\">Add</button>\n        </div>\n      </div>\n\n      <div class=\"row col-12 bg-secondary py-2 mt-2 text-white\">\n        <div class=\"col-8 text-center\">\n          <input id=\"promo\" type=\"checkbox\" v-model=\"hideCompleted\" class=\"form-check-input\">\n          <label for=\"promo\" class=\"form-check-label font-weight-bold\">Hide completed tasks</label>\n        </div>\n        <div class=\"col-4 text-center\">\n          <button class=\"btn btn-sm btn-warning\" v-on:click=\"deleteCompleted\">Delete Done</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"app\",\n  data() {\n    return {\n      name: \"Aman\",\n      tasks: [\n      ],\n      hideCompleted: true,\n      newItemText: \"\",\n      whenItemText: \"\"\n    };\n  },\n  computed: {\n    filteredTasks() {\n      {\n        return this.hideCompleted\n          ? this.tasks.filter(t => !t.done)\n          : this.tasks;\n      }\n    }\n  },\n  methods: {\n    addNewTodo() {\n      this.tasks.push({\n        action: this.newItemText,\n        when: this.whenItemText,\n        done: false\n      });\n      this.storeData();\n      this.newItemText = \"\";\n      this.whenItemText = \"\";\n    },\n    storeData() {\n      localStorage.setItem(\"actions\", JSON.stringify(this.tasks));\n    },\n    deleteCompleted() {\n      this.tasks = this.tasks.filter(t => !t.done);\n      this.storeData();\n    }\n  },\n  created() {\n    let data = localStorage.getItem(\"actions\");\n    if (data != null) {\n      this.tasks = JSON.parse(data);\n    }\n  }\n};\n</script>\n\n<style>\n#id{\n  width: 100%;\n}\n</style>\n"]}]}